enum !CK_FILE_WRITEMODE
	CKFILE_UNCOMPRESSED	       =0,	// Save data uncompressed
	CKFILE_CHUNKCOMPRESSED_OLD =1,	// Obsolete
	CKFILE_EXTERNALTEXTURES_OLD=2,	// Obsolete : use CKContext::SetGlobalImagesSaveOptions instead.
	CKFILE_FORVIEWER           =4,	// Don't save Interface Data within the file, the level won't be editable anymore in the interface
	CKFILE_WHOLECOMPRESSED     =8,	// Compress the whole file

enum !CK_LOAD_FLAGS
			CK_LOAD_ANIMATION					=1<<0,	// Load animations
			CK_LOAD_GEOMETRY					=1<<1,	// Load geometry.
			CK_LOAD_DEFAULT						=CK_LOAD_GEOMETRY|CK_LOAD_ANIMATION,	// Load animations & geometry
			CK_LOAD_ASCHARACTER					=1<<2, // Load all the objects and create a character that contains them all .
			CK_LOAD_DODIALOG					=1<<3, // Check object name unicity and warns the user with a dialog box when duplicate names are found. 
			CK_LOAD_AS_DYNAMIC_OBJECT			=1<<4, // Objects loaded from this file may be deleted at run-time or are temporary
			CK_LOAD_AUTOMATICMODE				=1<<5, // Check object name unicity and automatically rename or replace according to the options specified in CKContext::SetAutomaticLoadMode
			CK_LOAD_CHECKDUPLICATES				=1<<6, // Check object name unicity (The list of duplicates is stored in the CKFile class after a OpenFile call
			CK_LOAD_CHECKDEPENDENCIES			=1<<7, // Check if every plugins needed are availables
			CK_LOAD_ONLYBEHAVIORS				=1<<8, // 

enum CK_FO_OPTIONS
		CK_FO_DEFAULT = 0,		 // Default behavior : a new object will be created with the name stored in CKFileObject
		CK_FO_RENAMEOBJECT,		 // Renaming : a new object will be created with the name stored in CKFileObject + a integer value XXX to ensure its uniqueness
		CK_FO_REPLACEOBJECT,	 // Do not create a new object, instead use an existing one which CK_ID is given by CreatedObject   	
								 // to load the chunk on 
		CK_FO_DONTLOADOBJECT,	 // Object chunk will not be read either because it is a reference
								// or because the loaded object already exist in the current level 
								// and the user choose to keep the existing one.

enum CK_PLUGIN_TYPE
	CKPLUGIN_BITMAP_READER		= 0,	// The plugin is bitmap (textures,sprites) loader
	CKPLUGIN_SOUND_READER		= 1,	// Sound Reader Plugin
	CKPLUGIN_MODEL_READER		= 2,	// 3D Model Reader 
	CKPLUGIN_MANAGER_DLL		= 3,	// The plugin implements a Manager
	CKPLUGIN_BEHAVIOR_DLL		= 4,	// The plugin implements one or more behaviors
	CKPLUGIN_RENDERENGINE_DLL	= 5,	// Render Engine plugin
	CKPLUGIN_MOVIE_READER		= 6,	// Movie (AVI,Mpeg) reader		
	CKPLUGIN_EXTENSION_DLL		= 7,	// Generic extension (definition of new parameter types or operations for ex.)	

enum CK_STATECHUNK_DATAVERSION
	CHUNKDATA_OLDVERSION=			0,	// Before any version was saved 
	CHUNKDATA_BASEVERSION=			1,	// First version	
	CHUNK_WAVESOUND_VERSION2=		2,	// Changes in wavesound format	
	CHUNK_WAVESOUND_VERSION3=		3,	// Changes in wavesound format	
	CHUNK_MATERIAL_VERSION_ZTEST=	4,	// Change in material save format	
	CHUNK_MAJORCHANGE_VERSION=		5,	// Optimisations on many save functions		
	CHUNK_MACCHANGE_VERSION=		6,	// Misc new Statechunk functions for macintosh (Big-Endian <-> Little Endian conversion )	
	CHUNK_WAVESOUND_VERSION4=		7,	// Changes in wavesound format (Added sound length)	
	CHUNK_SCENECHANGE_VERSION=		8,	// Changes in sceneObjectDesc format (Remove lasttimevalue)	
	CHUNK_MESHCHANGE_VERSION=		9,	// Changes in Mesh save format (primitives)	
	CHUNK_DEV_2_1=				   10,	// Changes in wavesound reading of inside, outside angles 

	CHUNKDATA_CURRENTVERSION=		CHUNK_DEV_2_1	,

enum CK_STATECHUNK_CHUNKVERSION
	CHUNK_VERSIONBASE=	0, 
	CHUNK_VERSION1=		4,	// equal to file version : WriteObjectID => table
	CHUNK_VERSION2=		5,	// add Manager Data
	CHUNK_VERSION3=		6,	// New ConvertToBuffer / ReadFromBuffer (file system changed to reflect this )
	CHUNK_VERSION4=		7,	// New WriteObjectID when saving to a file 

enum CK_STATECHUNK_CHUNKOPTIONS
	CHNK_OPTION_IDS			= 0x01,		// IDS are stored inside chunk
	CHNK_OPTION_MAN			= 0x02,		// Managers ints are store inside chunk
	CHNK_OPTION_CHN			= 0x04,		// Sub chunk are stored	inside chunk
	CHNK_OPTION_FILE		= 0x08,		// Chunk was written with indices relative to a file....  
	CHNK_OPTION_ALLOWDYN	= 0x10,		// Dynamic object can be written in the chunk 
	CHNK_OPTION_LISTBIG		= 0x20,		// List are store in big Endian ? 
	CHNK_DONTDELETE_PTR		= 0x40,		// Data buffer stored in m_Buffer is not owned by CKStateChunk , it must not be deleted...
	CHNK_DONTDELETE_PARSER	= 0x80,		// m_Parser Ptr is not owned by CKStateChunk , it must not be deleted...

